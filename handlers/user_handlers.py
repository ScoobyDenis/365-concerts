import asyncio
import re
from aiogram import types, F
from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup, FSInputFile, InlineKeyboardButton, \
    InlineKeyboardMarkup, CallbackQuery
from lexicon.lexicon import LEXICON_RU
from config_data.config import Config, load_config
from data_bases.connect_data_base import connect_db, DB_NAME, ADMINS
from my_functions.functions import *
from filters.filters import *
config: Config = load_config()

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"SELECT * FROM users WHERE user_id = {message.from_user.id}")
    user = cursor.fetchone()
    if user:
        pass
    else:
        await message.answer(message.from_user.first_name + ', ' + LEXICON_RU['/start'])
        await send_pdf(message.from_user.id, "files/formula.pdf", config.tg_bot.token)

        data = [message.from_user.id, '@'+message.from_user.username, 0, 0, '–Ω–µ—Ç', '-', 0, 0, 0, 0, 'on']
        cursor.execute("INSERT INTO users (user_id, user_name, mark1, mark2, club, offer_status, mark3, mark4, mark5, mark6, bot_status)  VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", data)
        connect.commit()

        await asyncio.sleep(300/10) # 5 min
        msg2_youtube = await message.answer(LEXICON_RU['msg2_youtube'], reply_markup=await create_kb('–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—å'))
        asyncio.create_task(delete_message(msg2_youtube, 14400/100-100))  # 4 —á–∞—Å–∞

        offer_1_pic = FSInputFile("files/offer_1.jpg")
        await asyncio.sleep(45)  # –≤—Ä–µ–º–µ–Ω–Ω–æ, –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏ –Ω–∏–∂–µ
        await wait_until(6, 30) # 10:30
        ms3_send_photo = await message.answer_photo(offer_1_pic, LEXICON_RU['msg3_offer'], parse_mode='HTML')
        asyncio.create_task(delete_message(ms3_send_photo, 82800/400)) # 23 —á–∞—Å–∞
        await asyncio.sleep(82800/400) # 23 —á–∞—Å–∞
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏—Å–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª—É–±. –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ —à–ª–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–∞–ª—å—à–µ
        if await check_club_state(message):
            pass
        else:
            await send_message_on_time(message,
                                       LEXICON_RU['msg4_youtube'],
                                       30/10, # –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ 23 —á–∞—Å–∞
                                       14400/100, # 4—á–∞—Å–∞
                                       kb=await create_kb('–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—åüîó'))

            await asyncio.sleep(14400/100)
            msg_reels_rules = await message.answer(LEXICON_RU['msg5'], parse_mode='HTML')



@router.message(Command('admin'))
async def get_admin_menu(message: types.Message):
    if message.from_user.id in ADMINS:
        await message.answer("–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"
                             "/stats - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ç–∫–∞–º\n"
                            "/get_file - –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n"
                             "/bot_off id - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞")
@router.message(Command('stats'))
async def check_marks(message: types.Message):
    if message.from_user.id in ADMINS:
        connect, cursor = connect_db(DB_NAME)
        cursor.execute(f"SELECT SUM(mark1) FROM users")
        sum_marks1 = cursor.fetchone()[0]
        cursor.execute(f"SELECT SUM(mark2) FROM users")
        sum_marks2 = cursor.fetchone()[0]
        cursor.execute(f"SELECT SUM(mark3) FROM users")
        sum_marks3 = cursor.fetchone()[0]
        cursor.execute(f"SELECT SUM(mark4) FROM users")
        sum_marks4 = cursor.fetchone()[0]
        cursor.execute(f"SELECT SUM(mark5) FROM users")
        sum_marks5 = cursor.fetchone()[0]
        cursor.execute(f"SELECT SUM(mark6) FROM users")
        sum_marks6 = cursor.fetchone()[0]
        cursor.execute(f"SELECT COUNT(*) FROM users")
        size_db = cursor.fetchone()[0]
        await message.answer(f"–í—Å–µ–≥–æ —á–µ–ª–æ–≤–µ–∫ –∑–∞—à–ª–æ –≤ –±–æ—Ç–∞: <b>{size_db}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ '–ü–æ—á–µ–º—É –Ω–µ –≥–æ—Ç–æ–≤—ã' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks1}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ '–ê–Ω—Ç–∏–∫–∏–¥–∞–ª–æ–≤–æ' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks2}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ 'club offer –≠—Ç–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π –∞—Ä—Ç–∏—Å—Ç' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks3}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ 'club offer –û—à–∏–±–∫–∞ N1' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks4}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ 'club offer 5 –ü–†–ò–ß–ò–ù' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks5}</b>\n"
                             f"–ü–æ –º–µ—Ç–∫–µ 'club offer –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å' –ø–µ—Ä–µ—à–ª–æ: <b>{sum_marks6}</b>", parse_mode='HTML')
@router.message(Command('get_file'))
async def send_file(message: types.Message):
    if message.from_user.id in ADMINS:
        await convert_db_to_csv()
        await message.reply_document(FSInputFile('output.csv'))
        await message.answer("mark1 - '–ü–æ—á–µ–º—É –Ω–µ –≥–æ—Ç–æ–≤—ã'\n"
                             "mark2 - '–ê–Ω—Ç–∏–∫–∏–¥–∞–ª–æ–≤–æ'\n"
                             "mark3 - '–≠—Ç–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π –∞—Ä—Ç–∏—Å—Ç'\n"
                             "mark4 - '–û—à–∏–±–∫–∞ N1'\n"
                             "mark5 - '5 –ü–†–ò–ß–ò–ù'\n"
                             "mark6 - '–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å'\n")

@router.message(Command('bot_off'))
async def send_file(message: types.Message):
    if message.from_user.id in ADMINS:
        try:
            command, user_id = message.text.split(maxsplit=1)
            try:
                await change_bot_state_to_off(user_id)
                await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –±–æ—Ç–∞")
            except Exception as e:
                await message.answer("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        except ValueError:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ id –ø–æ—Å–ª–µ \n"
                                 "–∫–æ–º–∞–Ω–¥—ã /bot_off\n"
                                 "id –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ /get_file")


@router.message(F.text=="–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—å")
async def cmd_youtube_filter1(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark1 =  mark1 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()

    msg1_youtube_filter1 = await message.answer(f"{'https://youtu.be/8Z4aFPKMPkE'}\n")
    await asyncio.sleep(60/10) #1min
    msg2_youtube_filter1 = await message.answer(LEXICON_RU['msg2_youtube_filter1'])

    asyncio.create_task(delete_message(msg2_youtube_filter1, 10800/100)) #3—á–∞—Å–∞
    asyncio.create_task(delete_message(msg1_youtube_filter1, 14400/100))  # 4—á–∞—Å–∞
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text=="–ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å—åüîó")
async def cmd_youtube_filter2(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark2 = mark2 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()
    msg1_youtube_filter2 = await message.answer(f"{'https://youtu.be/4Ltp7kyoZrg'}\n")
    await asyncio.sleep(5)  # —Å—Ä–∞–∑—É
    msg2_youtube_filter2 = await message.answer(LEXICON_RU['msg2_youtube_filter2'])
    asyncio.create_task(delete_message(msg2_youtube_filter2, 10800/100)) #3—á–∞—Å–∞
    asyncio.create_task(delete_message(msg1_youtube_filter2, 86400/100))  # 24—á–∞—Å–∞
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text=='–î–∞‚úÖ')
async def process_buttons_press_yes(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET offer_status = '–î–∞' WHERE user_id = {message.from_user.id}")
    connect.commit()

    msg_personal_yes = await message.answer(LEXICON_RU['msg_personal'])
    asyncio.create_task(delete_message(msg_personal_yes, 7200/100))  # 2 —á–∞—Å–∞
    await asyncio.sleep(7200/100)  # 2 —á–∞—Å–∞
    await send_two_day_msgs(message)



@router.message(F.text=='–ù–µ—Ç‚ùå')
async def process_buttons_press_no(message: types.Message):
    msg_not_open = await message.answer(LEXICON_RU['msg_not_open'])
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET offer_status = '–ù–µ—Ç' WHERE user_id = {message.from_user.id}")
    connect.commit()
    await send_msg_to_admins(message, '–Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É, —á—Ç–æ –æ—Ñ—Ñ–µ—Ä –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è')
    await asyncio.sleep(30)  #30—Å–µ–∫
    msg_personal_no = await message.answer(LEXICON_RU['msg_personal'])
    asyncio.create_task(delete_message(msg_not_open, 7200/100))  # 2—á–∞—Å–∞
    asyncio.create_task(delete_message(msg_personal_no, 7200/100))  # 2—á–∞—Å–∞, –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ?
    await send_two_day_msgs(message)

@router.message(F.text=='–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —É—á–∞—Å—Ç–∏–µ')
async def get_offer_last_chance(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark6 =  mark6 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()
    await send_msg_to_admins(message, '–ø—Ä–∏—à–µ–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π "—à–∞–Ω—Å"')
    msg = await message.answer(LEXICON_RU['msg_last_chance_kb'])
    asyncio.create_task(delete_message(msg, 3300/100)) # 58 –º–∏–Ω—É—Ç
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text=='–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–∏–µ üëå')
async def get_offer_five_reasons(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark5 =  mark5 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()
    await send_msg_to_admins(message, '–ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É "5 –ø—Ä–∏—á–∏–Ω..."')
    msg = await message.answer(LEXICON_RU['msg_5_reasons_kb'])
    asyncio.create_task(delete_message(msg, 18000/100)) # 5 —á–∞—Å–æ–≤
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text=='–ü–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–∞—Ö–∞—Ç—å –∑–∞ –∫–æ–ø–µ–π–∫–∏ü§ë')
async def get_offer_after_artist_should_know(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark3 =  mark3 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()
    await send_msg_to_admins(message, '–ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É "–ö–∞–∂–¥—ã–π –∞—Ä—Ç–∏—Å—Ç.."')
    msg = await message.answer(LEXICON_RU['msg_artist_should_know_kb'])
    asyncio.create_task(delete_message(msg, 21600/100)) # 6 —á–∞—Å–æ–≤
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text=='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–ª—É–±—É üî•')
async def get_offer_after_artist_should_know(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"UPDATE users SET mark4 =  mark4 + 1 WHERE user_id = {message.from_user.id}")
    connect.commit()
    await send_msg_to_admins(message, '–ø–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É "–û—à–∏–±–∫–∞ –Ω–æ–º–µ—Ä 1"')
    msg = await message.answer(LEXICON_RU['msg_error_num1_offer_kb'])
    asyncio.create_task(delete_message(msg, 21600/100)) # 6 —á–∞—Å–æ–≤
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)

@router.message(F.text.in_(['–∫–ª—É–±', '–ö–ª—É–±', '–ö–õ–£–ë', '"–ö–õ–£–ë"', 'rke,', 'RKE,']))
async def cmd_club_react(message: types.Message):
    connect, cursor = connect_db(DB_NAME)
    cursor.execute(f"SELECT club FROM users WHERE user_id = {message.from_user.id}")
    if cursor.fetchone()[0] == '–¥–∞':
        await message.answer('–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ\n'
                             '–∏—Å—Ç–µ–∫–ª–æ. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä\n'
                             '—Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ\n'
                             '–≤—Ä–µ–º—è –∏ —Å–æ–æ–±—â–∏—Ç –Ω–æ–≤—ã–µ\n '
                             '—É—Å–ª–æ–≤–∏—è')
        await send_msg_to_admins(message, '–Ω–∞–ø–∏—Å–∞–ª "–ö–õ–£–ë" –≤—Ç–æ—Ä–æ–π —Ä–∞–∑')
    else:
        cursor.execute(f"UPDATE users SET club = '{'–¥–∞'}' WHERE user_id = {message.from_user.id}")
        connect.commit()
        await send_msg_to_admins(message, '–Ω–∞–ø–∏—Å–∞–ª "–ö–õ–£–ë"')

        msg_club_offer = await message.answer(f"{message.from_user.first_name}, –≤–∞—à–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–ª—É–±—É –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µüëá\n\n"
                                 f"{'https://365concerts.ru/club_bot_149'}\n\n"
                                 f"–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ\n"
                                 f"2 –¥–Ω—è")

        asyncio.create_task(delete_message(msg_club_offer, 3600/100))  # —á–µ—Ä–µ–∑ —á–∞—Å
        await asyncio.sleep(1800/100) # 30–º–∏–Ω
        await send_kb_yes_no(message)
        await asyncio.sleep(3700/100) #–ø–æ–¥–æ–∂–¥–∞—Ç—å —á—É—Ç—å –±–æ–ª—å—à–µ —á–∞—Å–∞ –ø–æ–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø–∞–¥—É—Ç
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∞–ª –ª–∏ –∫–Ω–æ–ø–∫—É
        cursor.execute(f"SELECT offer_status FROM users WHERE user_id = {message.from_user.id};")
        offer_status = cursor.fetchone()[0]
        if offer_status == '-':
            msg_you_asked = await message.answer(LEXICON_RU['msg_you_asked'])
            asyncio.create_task(delete_message(msg_you_asked, 3600/100))  # 1—á–∞—Å
            await asyncio.sleep(7200/100) #1—á–∞—Å? –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ, –Ω–∞–¥–æ —Å–ø—Ä–æ—Å–∏—Ç—å?
            # await send_kb_yes_no(message)
            await asyncio.sleep(3600/100)  # 1—á–∞—Å? –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ, –Ω–∞–¥–æ —Å–ø—Ä–æ—Å–∏—Ç—å?
            msg_not_open = await message.answer(LEXICON_RU['msg_not_open'])
            asyncio.create_task(delete_message(msg_not_open, 3600 / 100))  # 1—á–∞—Å

            await send_two_day_msgs(message)



